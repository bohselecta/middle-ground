version: '3.8'

services:
  # Main application
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@db:5432/tablature
      - NEXT_PUBLIC_APP_NAME=Tablature
      - SLACK_BOT_TOKEN=mock
      - SLACK_SIGNING_SECRET=mock
      - SLACK_CHANNEL_ID=general
      - SAFE_MODE=true
    depends_on:
      - db
    volumes:
      - ./prisma:/app/prisma
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 10 &&
        pnpm dlx prisma migrate deploy &&
        pnpm dlx prisma db seed &&
        pnpm start
      "

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=tablature
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Development version with hot reload
  dev:
    build: .
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@db:5432/tablature
      - NEXT_PUBLIC_APP_NAME=Tablature
      - SLACK_BOT_TOKEN=mock
      - SLACK_SIGNING_SECRET=mock
      - SLACK_CHANNEL_ID=general
      - SAFE_MODE=true
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        pnpm dlx prisma migrate dev --name init &&
        pnpm dlx prisma db seed &&
        pnpm dev
      "

volumes:
  postgres_data:
